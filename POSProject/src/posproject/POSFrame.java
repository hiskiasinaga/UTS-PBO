/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package posproject;

import java.sql.*;


import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import java.util.ArrayList;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;

import posproject.Transaksi.itemTransaksi;

/**
 *
 * @author hiskiasinaga
 */
public class POSFrame extends javax.swing.JFrame {

    ArrayList<Barang> daftarBarang;
    
    TableModel daftarModel;
    
    int jumlahBelanja = 0;
    
    /**
     * Creates new form POSFrame
     */
    public POSFrame() {
        
        DBConnector.initDBConnection();
        Barang.loadBarangFromDB();
        System.out.println(Barang.daftarBarang.size());
        daftarBarang = Barang.daftarBarang;
               
        
        System.out.println(daftarBarang.size());
        initComponents();
        generalID();
        
        Timer timer = new Timer(1000, e -> {
            updateTime();
        });
        timer.start();
        
        daftarModel = daftarTable.getModel();
        
        daftarModel.addTableModelListener(new TableModelListener()
                {
            @Override
            public void tableChanged(TableModelEvent e) {
           
            System.out.println("Table Changed");
            
            if(e.getColumn()==5){
                 float total;
                 float totalBelanja=0.0f;
                
               for(int i=0;i<jumlahBelanja;i++){
                    total = (float)daftarModel.getValueAt(i, 5);
                    totalBelanja = totalBelanja+total;
               } 
               int totalBelanjaInt = (int)totalBelanja;
               total_harga.setText(String.format("%,d",totalBelanjaInt));
            } 
            }     
                }
        );
    }
    
    
    
    private void generalID(){
        try {
            Statement stmt = DBConnector.connection.createStatement();
            String sql = "SELECT COUNT(*) as jumlah_transaksi FROM transaksi";
            ResultSet rs = stmt.executeQuery(sql);
            rs.next();
            int JumlahData = rs.getInt("jumlah_transaksi");
            System.out.println(JumlahData);
            int GeneralID = JumlahData+1;
            String idCustString = String.format("CS%03d",GeneralID);
            String idTransString = String.format("TR%03d", GeneralID);
            
            
            id_transaksi.setText(idTransString);
            id_pelanggan.setText(idCustString);
            
          
            
        } catch (SQLException ex) {
            Logger.getLogger(POSFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
}
    
private void updateTime() {
       DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        String formattedDate = now.format(formatter);
        tgl_field.setText(formattedDate);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        id_barang = new javax.swing.JTextField();
        nama_barang = new javax.swing.JTextField();
        hargaTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        daftarTable = new javax.swing.JTable();
        total_harga = new javax.swing.JTextField();
        uang_diterima = new javax.swing.JTextField();
        kembalian = new javax.swing.JTextField();
        id_transaksi = new javax.swing.JTextField();
        id_pelanggan = new javax.swing.JTextField();
        tgl_field = new javax.swing.JTextField();
        btn_save = new javax.swing.JButton();
        jlh_pesanan = new javax.swing.JTextField();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        id_barang.setBackground(new java.awt.Color(255, 255, 255));
        id_barang.setForeground(new java.awt.Color(0, 0, 0));
        id_barang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_barangActionPerformed(evt);
            }
        });
        jPanel1.add(id_barang, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 648, 200, 30));

        nama_barang.setEditable(false);
        nama_barang.setBackground(new java.awt.Color(255, 255, 255));
        nama_barang.setForeground(new java.awt.Color(0, 0, 0));
        nama_barang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nama_barangActionPerformed(evt);
            }
        });
        jPanel1.add(nama_barang, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 200, 200, 30));

        hargaTextField.setEditable(false);
        hargaTextField.setBackground(new java.awt.Color(255, 255, 255));
        hargaTextField.setForeground(new java.awt.Color(0, 0, 0));
        hargaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaTextFieldActionPerformed(evt);
            }
        });
        jPanel1.add(hargaTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 290, 200, 30));

        daftarTable.setBackground(new java.awt.Color(255, 255, 255));
        daftarTable.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        daftarTable.setForeground(new java.awt.Color(0, 0, 0));
        daftarTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "No.", "Kode", "Nama", "Harga Satuan", "Jumlah", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(daftarTable);
        if (daftarTable.getColumnModel().getColumnCount() > 0) {
            daftarTable.getColumnModel().getColumn(0).setResizable(false);
            daftarTable.getColumnModel().getColumn(0).setPreferredWidth(5);
            daftarTable.getColumnModel().getColumn(1).setResizable(false);
            daftarTable.getColumnModel().getColumn(1).setPreferredWidth(40);
            daftarTable.getColumnModel().getColumn(2).setResizable(false);
            daftarTable.getColumnModel().getColumn(2).setPreferredWidth(250);
            daftarTable.getColumnModel().getColumn(3).setResizable(false);
            daftarTable.getColumnModel().getColumn(3).setPreferredWidth(60);
            daftarTable.getColumnModel().getColumn(4).setResizable(false);
            daftarTable.getColumnModel().getColumn(4).setPreferredWidth(25);
            daftarTable.getColumnModel().getColumn(5).setResizable(false);
            daftarTable.getColumnModel().getColumn(5).setPreferredWidth(70);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 160, 950, 390));

        total_harga.setEditable(false);
        total_harga.setBackground(new java.awt.Color(255, 255, 255));
        total_harga.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(total_harga, new org.netbeans.lib.awtextra.AbsoluteConstraints(1107, 648, 180, 30));

        uang_diterima.setBackground(new java.awt.Color(255, 255, 255));
        uang_diterima.setForeground(new java.awt.Color(0, 0, 0));
        uang_diterima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uang_diterimaActionPerformed(evt);
            }
        });
        uang_diterima.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                uang_diterimaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uang_diterimaKeyTyped(evt);
            }
        });
        jPanel1.add(uang_diterima, new org.netbeans.lib.awtextra.AbsoluteConstraints(349, 648, 180, 30));

        kembalian.setEditable(false);
        kembalian.setBackground(new java.awt.Color(255, 255, 255));
        kembalian.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(kembalian, new org.netbeans.lib.awtextra.AbsoluteConstraints(596, 648, 180, 30));

        id_transaksi.setBackground(new java.awt.Color(255, 255, 255));
        id_transaksi.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(id_transaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 52, 180, 30));

        id_pelanggan.setBackground(new java.awt.Color(255, 255, 255));
        id_pelanggan.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(id_pelanggan, new org.netbeans.lib.awtextra.AbsoluteConstraints(596, 52, 180, 30));

        tgl_field.setBackground(new java.awt.Color(255, 255, 255));
        tgl_field.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(tgl_field, new org.netbeans.lib.awtextra.AbsoluteConstraints(988, 52, 240, 30));

        btn_save.setBackground(new java.awt.Color(0, 184, 107));
        btn_save.setFont(new java.awt.Font("Helvetica Neue", 1, 16)); // NOI18N
        btn_save.setForeground(new java.awt.Color(31, 43, 56));
        btn_save.setText("Selesaikan Transaksi");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        jPanel1.add(btn_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 810, 210, 50));

        jlh_pesanan.setBackground(new java.awt.Color(255, 255, 255));
        jlh_pesanan.setForeground(new java.awt.Color(0, 0, 0));
        jlh_pesanan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlh_pesananActionPerformed(evt);
            }
        });
        jPanel1.add(jlh_pesanan, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 379, 200, 30));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Dashboard Background.png"))); // NOI18N
        jPanel1.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 900));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 900));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nama_barangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nama_barangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nama_barangActionPerformed

    private void hargaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hargaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hargaTextFieldActionPerformed

    private void id_barangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_barangActionPerformed
       String kodeInput = id_barang.getText();
       Barang tempBarang;
       boolean ditemukan = false;
       
       for(int i = 0; i< daftarBarang.size(); i++){
            tempBarang = daftarBarang.get(i); 
            if(tempBarang.id_barang.equals(kodeInput)){     
                System.out.println("Barang Ditemukan");
                nama_barang.setText(tempBarang.nama);
                hargaTextField.setText(Float.toString(tempBarang.harga));
                jlh_pesanan.setText("1");
                ditemukan = true;
            }
         
        }
       
       if(!ditemukan){
           JOptionPane.showMessageDialog(this, "Barang dengan ID yang diinputkan tidak ditemukan", "ERROR ID", JOptionPane.ERROR_MESSAGE);
           id_barang.setText("");
           nama_barang.setText("");
           hargaTextField.setText("");
       }
       
       
            
    }//GEN-LAST:event_id_barangActionPerformed

    private void uang_diterimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uang_diterimaActionPerformed
        // TODO add your handling code here:
        
        String totalbelanja = total_harga.getText();
        String stringTotalBelanja = totalbelanja.replace(",", "");
        
        float totalBelanja = Float.parseFloat(stringTotalBelanja);
        int totalBelanjaInt = (int)totalBelanja;
        
        String bayar = uang_diterima.getText();
        String stringBayar = bayar.replace(",", "");
        
        float dibayar = Float.parseFloat(stringBayar);
        int dibayarInt = (int)dibayar;
        
        int uang_kembali = dibayarInt - totalBelanjaInt;
        
        if(dibayar >= totalBelanjaInt){
            kembalian.setText(String.format("%,d",uang_kembali));
        } else {
            JOptionPane.showMessageDialog(this, "Uang Anda Kurang","ERROR MONEY",JOptionPane.ERROR_MESSAGE);
            uang_diterima.setText("");
        }
    }//GEN-LAST:event_uang_diterimaActionPerformed

    private void uang_diterimaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uang_diterimaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_uang_diterimaKeyTyped

    private void uang_diterimaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uang_diterimaKeyReleased
        // TODO add your handling code here:
        
        String dibayarString = uang_diterima.getText();
        dibayarString = dibayarString.replace(",","");
        int dibayarInput = Integer.parseInt(dibayarString);
        uang_diterima.setText(String.format("%,d",dibayarInput));
    }//GEN-LAST:event_uang_diterimaKeyReleased

    private void jlh_pesananActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlh_pesananActionPerformed
        // TODO add your handling code here:
        String jlhPesanan = jlh_pesanan.getText();
        String kodeInput = id_barang.getText();
        int tempIndex = 0;
        
        Barang tempBarang;
        
        for(int i = 0; i< daftarBarang.size(); i++){
            tempBarang = daftarBarang.get(i);
            if(tempBarang.id_barang.equals(kodeInput)){
                tempIndex = jumlahBelanja;
                jumlahBelanja++;
                
                   daftarModel.setValueAt(jumlahBelanja, tempIndex, 0);
                   daftarModel.setValueAt(kodeInput, tempIndex, 1);
                   daftarModel.setValueAt(tempBarang.nama, tempIndex, 2);
                   daftarModel.setValueAt(tempBarang.harga, tempIndex, 3);
                   daftarModel.setValueAt(jlhPesanan, tempIndex, 4);
                   
                   float totalBelanja = (float)tempBarang.harga*Integer.parseInt(jlhPesanan);
                   daftarModel.setValueAt(totalBelanja,tempIndex,5);
            } 
        }
        
        id_barang.setText("");
        nama_barang.setText("");
        hargaTextField.setText("");
        jlh_pesanan.setText("");

    }//GEN-LAST:event_jlh_pesananActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        // TODO add your handling code here:
        String idTransaksi = id_transaksi.getText();
        int intIDTransaksi = Integer.parseInt(idTransaksi.substring(2));
        
        String idPelanggan = id_pelanggan.getText();
        int intIDPelanggan = Integer.parseInt(idPelanggan.substring(2));
        
        String totalHarga = total_harga.getText();
        totalHarga =totalHarga.replace(",","");
        float floatTotalHarga = Float.parseFloat(totalHarga);
        
        String date = tgl_field.getText();
        
        Transaksi transaksi = new Transaksi(intIDTransaksi,intIDPelanggan,floatTotalHarga,date);
        
        for(int i=0; i<jumlahBelanja;i++){
            String id_barang = daftarModel.getValueAt(i, 1).toString();
            String nama_barang = daftarModel.getValueAt(i,2).toString();
            float harga_satuan = Float.parseFloat(daftarModel.getValueAt(i,3).toString());
            int jumlah_barang = Integer.parseInt(daftarModel.getValueAt(i,4).toString());
            float harga_total = Float.parseFloat(daftarModel.getValueAt(i,5).toString());
            transaksi.addItem(new itemTransaksi(id_barang, nama_barang, harga_satuan, jumlah_barang, harga_total));
        }
        try {
        // Simpan data ke dalam database
        Transaksi.simpanDatabase();
        // Jika berhasil, tampilkan pesan sukses
        JOptionPane.showMessageDialog(null, "Data transaksi berhasil disimpan!");
        this.dispose();
        new POSFrame().setVisible(true);
        generalID();
      
       
        
        
       
    } catch (SQLException ex) {
        // Jika terjadi error, tampilkan pesan error
        JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat menyimpan data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btn_saveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
////        try {
////            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
////                if ("Nimbus".equals(info.getName())) {
////                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
////                    break;
////                }
////            }
////        } catch (ClassNotFoundException ex) {
////            java.util.logging.Logger.getLogger(POSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
////        } catch (InstantiationException ex) {
////            java.util.logging.Logger.getLogger(POSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
////        } catch (IllegalAccessException ex) {
////            java.util.logging.Logger.getLogger(POSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
////        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
////            java.util.logging.Logger.getLogger(POSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
////        }
//        //</editor-fold>
//    
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new POSFrame().setVisible(true);
//            }
//        });
//    }
   /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(POSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(POSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(POSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(POSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new POSFrame().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton btn_save;
    private javax.swing.JTable daftarTable;
    private javax.swing.JTextField hargaTextField;
    private javax.swing.JTextField id_barang;
    private javax.swing.JTextField id_pelanggan;
    private javax.swing.JTextField id_transaksi;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jlh_pesanan;
    private javax.swing.JTextField kembalian;
    private javax.swing.JTextField nama_barang;
    private javax.swing.JTextField tgl_field;
    private javax.swing.JTextField total_harga;
    private javax.swing.JTextField uang_diterima;
    // End of variables declaration//GEN-END:variables
}
